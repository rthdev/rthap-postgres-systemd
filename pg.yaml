---
- name: Playbook to configure Postgres
  hosts: postgres
  become: true
  vars:
    base_disk: /dev/sdb
    lvm_vg_base_name: vgpg
    lvm_lv_base_name: lvpg
    lvm_lv_base_fstype: xfs
    pg_dir_base: /dbs
    pg_db_dir: "{{ pg_dir_base }}/postgres/clair"
    pg_db_name: clair
    pg_db_unit: postgresql@{{ pg_db_name }} 
    pg_db_port: 5432
  
  tasks:
    - name: Ensure disk is partitioned
      parted:
        device: "{{ base_disk }}"
        number: 1
        part_start: 0%
        part_end: 100%
        state: present
        flags: [ lvm ]
        align: optimal

    - name: Ensure LVM Volume Group exists
      lvg:
        pvs: "{{ base_disk }}1"
        vg: "{{ lvm_vg_base_name }}"
        state: present

    - name: Ensure LVM Logical Volume exists
      lvol:
        vg: "{{ lvm_vg_base_name }}"
        lv: "{{ lvm_lv_base_name }}"
        size: 100%VG

    - name: Ensure filesystem is created
      filesystem:
        dev: "/dev/{{ lvm_vg_base_name }}/{{ lvm_lv_base_name }}"
        fstype: "{{ lvm_lv_base_fstype }}"

    - name: Ensure base path exists
      file:
        path: "{{ pg_dir_base }}"
        state: directory
        owner: root
        group: root

    - name: Ensure postgres base directory is mounted
      mount:
        path: "{{ pg_dir_base }}"
        src: "/dev/{{ lvm_vg_base_name }}/{{ lvm_lv_base_name }}"
        fstype: xfs
        opts: noatime,defaults
        state: mounted

    - name: Install postgres sql server and deps
      package:
        name:
          - postgresql-server
          - python3-psycopg2
        state: installed

    - name: Ensure DB path exists
      file:
        path: "{{ pg_db_dir }}"
        state: directory
        owner: postgres
        group: postgres
      loop:
        - "{{ pg_dir_base }}/postgres"
        - "{{ pg_db_dir }}"

    - name: Ensure postgres instance exists
      command:
        cmd: /usr/sbin/postgresql-new-systemd-unit --unit={{ pg_db_unit }} --datadir={{ pg_db_dir }}/data
        creates: /etc/systemd/system/{{ pg_db_unit }}.service.d

    - name: Initialize Database
      command:
        cmd: postgresql-setup --initdb --unit={{ pg_db_unit }} --port={{ pg_db_port }}
        creates: "{{ pg_db_dir }}/data/postgresql.conf"

    - name: Ensure Service is started and enabled
      systemd:
        name: "{{ pg_db_unit }}"
        state: started
        enabled: true

    - name: Configure Postgres to listen on all interfaces
      postgresql_set:
        name: listen_addresses
        value: "*"
        port: "{{ pg_db_port }}"
      become_user: postgres
      notify:
        - Restart postgres

  handlers:
    - name: Restart postgres
      systemd:
        name: "{{ pg_db_unit }}"
        state: restarted
